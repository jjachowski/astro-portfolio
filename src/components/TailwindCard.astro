---
type Color = 'red' | 'blue' | 'green' | 'purple';
export type Props = {
  title: string;
  text?: string;
  color?: Color;
  hover?: boolean;
};

const { text, title, color = 'purple', hover = true } = Astro.props;

const colors: Record<Color, string> = {
  green:
    'bg-green-400 hover:bg-green-600 hover:border-green-600 border-green-400',
  purple:
    'bg-purple-400 hover:bg-purple-600 hover:border-purple-600 border-purple-400',
  red: 'bg-red-400 hover:bg-red-600 hover:border-red-600 border-red-400',
  blue: 'bg-blue-400 hover:bg-blue-600 hover:border-blue-600 border-blue-400',
};

const selectedColor = colors[color];

const bodyBg = () => {
  switch (color) {
    case 'green':
      return 'bg-green-200';
    case 'purple':
      return 'bg-purple-200';
    case 'red':
      return 'bg-red-200';
    case 'blue':
      return 'bg-blue-200';
    default:
      return 'bg-purple-200';
  }
};
---

<div
  class={`overflow-hidden rounded-md border-4 border-solid hover:shadow-2xl ${selectedColor}`}
>
  <h2 class={`w-auto p-4 text-3xl font-bold text-white shadow-md`}>
    {title}
  </h2>
  <div class={`${bodyBg()} p-4 pt-2`}>
    {text && <p>{text}</p>}
    <slot />
  </div>
</div>
